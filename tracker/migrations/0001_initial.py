# Generated by Django 5.1.6 on 2025-03-09 13:10

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FundingProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('website', models.URLField(blank=True, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='provider_logos/')),
            ],
        ),
        migrations.CreateModel(
            name='ChallengeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('account_size', models.DecimalField(decimal_places=2, max_digits=15)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('max_daily_loss', models.DecimalField(decimal_places=2, help_text='Yüzde olarak', max_digits=5)),
                ('max_total_loss', models.DecimalField(decimal_places=2, help_text='Yüzde olarak', max_digits=5)),
                ('profit_target', models.DecimalField(decimal_places=2, help_text='Yüzde olarak', max_digits=5)),
                ('duration_days', models.IntegerField(help_text='Challenge süresi (gün)')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='challenge_types', to='tracker.fundingprovider')),
            ],
        ),
        migrations.CreateModel(
            name='UserChallenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('ACTIVE', 'Devam Ediyor'), ('COMPLETED', 'Başarıyla Tamamlandı'), ('FAILED', 'Başarısız'), ('FUNDED', 'Fonlandı')], default='ACTIVE', max_length=20)),
                ('current_balance', models.DecimalField(decimal_places=2, max_digits=15)),
                ('highest_balance', models.DecimalField(decimal_places=2, max_digits=15)),
                ('lowest_balance', models.DecimalField(decimal_places=2, max_digits=15)),
                ('funding_date', models.DateField(blank=True, null=True)),
                ('profit_share_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('challenge_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tracker.challengetype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='challenges', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Trade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(max_length=20)),
                ('trade_type', models.CharField(choices=[('BUY', 'Alış'), ('SELL', 'Satış')], max_length=10)),
                ('entry_price', models.DecimalField(decimal_places=6, max_digits=15)),
                ('exit_price', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('lot_size', models.DecimalField(decimal_places=2, max_digits=10)),
                ('entry_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('exit_date', models.DateTimeField(blank=True, null=True)),
                ('take_profit', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('stop_loss', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('profit_loss', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trades', to=settings.AUTH_USER_MODEL)),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trades', to='tracker.userchallenge')),
            ],
        ),
        migrations.CreateModel(
            name='WithdrawalRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('request_date', models.DateField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('PENDING', 'Beklemede'), ('APPROVED', 'Onaylandı'), ('PAID', 'Ödendi'), ('REJECTED', 'Reddedildi')], default='PENDING', max_length=20)),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='withdrawals', to='tracker.userchallenge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='withdrawals', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
